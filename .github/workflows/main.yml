name: CI/CD Pipeline for GetMyEbookWeb

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: ✅ Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: 🧪 Run tests (Placeholder)
      run: |
        echo "🧪 Add unit tests here if available"

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test  # Waits for tests to complete
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v3

    - name: 🐳 Build Docker image
      run: docker build -t getmyebook:latest .

    - name: 🔐 Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin


    - name: 📤 Push Docker image
      run: |
        docker tag getmyebook:latest ${{ secrets.DOCKER_USERNAME }}/getmyebook:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/getmyebook:latest

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
    - name: 📂 Checkout code
      uses: actions/checkout@v3

    - name: 🔐 Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: 🚀 Deploy via SSH
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          cd ~/GetMyEbookWeb &&
          git pull origin main &&
          docker-compose down &&
          docker-compose up -d --build
        "


